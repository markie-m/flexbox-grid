/*! HTML5 Boilerplate v5.2.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */


html {
  background-color: #fff;
  height: 100%;
}

body {
  font-family: 'Source Sans Pro', sans-serif;
  padding: 2em;
  font-size: 1.25em;
  height: 100%;
}

.wrapper {
  /*add display:flex and set justify-content to space-between*/
  font-weight: 700;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 100%;
  flex-flow: row wrap;
  justify-content: space-between;
}
/* align-items doesn't seem to affect this code for some reason. Why? Because I hadn't set the height to 100%! */

header, footer {
    background-color: #222;
    height: 50px;
    width: 100%;
    color: #fff;
    padding: 3%;
}

h1 {
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #ffd517 65%);
    padding: 1%;
    text-shadow: 1px 1px 1px #222;
}

main {
    background-color:rgb(226, 195, 255);
    height: 250px;
    width: 100%;
    padding: 2%;
    /* flex-flow: row wrap; */
    flex-direction: column;
    font-weight: 300;
}

main p:first-child {
    text-align: center;
    font-weight: 700;
}

header,
footer,
main {
    display: flex;
    justify-content: center;
    align-items: center;
}

main a,
main a:visited {
    text-decoration: none;
    color: #4d0050;
    font-weight: 700;
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #ffd517 65%);
}
main a:hover,
main a:focus {
    color: #ff002b;
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #ffd517 65%);
}

a,
a:visited {
    text-decoration: none;
    color: #fff;
    font-weight: 700;
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #FFD0AE 65%);
}
a:hover,
a:focus {
    color: #97e7ff;
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #ffd000 65%);
    /* color: #FFD0AE; */
}
.div-1 a, .div-2 a, .div-3 a {
    text-shadow: 1px 1px 1px #4d0050;
    /* color: #fff; */
}

.div-1, .div-2, .div-3 {
  /*give the divs a width of 30%, add display:flex, set justify-content and align-items to center*/
  color: #fff;
  line-height: 1.5em;
  font-size: 1em;
  background-color: #b148b4;
  height: 60%;
  width: 30%;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1%;
}
/* Still trying to figure out how to contain the contents within the boxes (have the boxes stretch to fit the content as it resizes responsively) rather than have the content spill out as the browser window is resized. Box-sizing: border-box & giving the content padding aren't doing the trick. Changing the height from 50% to 60% helped this immensely and the rest I should be able to fix with breakpoints! */

span {
    color: #ffdd93;
    text-shadow: 1px 1px 1px #4d0050;
}

footer {
    /* flex-direction: column; */
    text-align: center;
    font-weight: 300;
}

footer a,
footer a:visited {
    text-decoration: none;
    /* color: #fcaa2f; */
    text-shadow: 1px 1px 1px #4d0050;
    background: linear-gradient(180deg, rgba(255,255,255,0) 65%, #ff5132 65%);
}
footer a:hover,
footer a:focus {
    color: #ff5132;
}



/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers:
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
